{"version":3,"sources":["icons/autumn-leaf.svg","api/jikan.ts","icons/florist.svg","icons/sun.svg","icons/winter-snowman.svg","components/MainPage.tsx","components/Loading.tsx","components/AnimePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["_path","getSeasonalAnime","year","season","a","axios","get","getRandomSeasonalAnime","data","animeData","anime","filter","r18","randomNumber","Math","floor","random","length","getAnimeById","id","getAllSeasonsAvailable","_excluded","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgAutumnLeaf","_ref","svgRef","title","titleId","props","xmlns","enableBackground","viewBox","ref","d","_path2","ForwardRef","SvgFlorist","width","height","fill","_circle","SvgSun","cx","cy","r","SvgWinterSnowman","MainPage","useState","setYear","setSeason","setData","history","useHistory","getYearData","archive","seasonColor","spring","summer","fall","winter","colorSelected","seasonIcon","handleSubmit","console","log","undefined","alert","push","mal_id","useEffect","Container","Row","className","Col","sm","onClick","Input","type","onChange","event","Number","value","map","yearData","index","Button","variant","size","Loading","stroke","stroke-width","ScoreCircle","styled","circle","rating","score","keyframes","AnimePage","premiere","loading","setLoading","ready","setReady","locationData","useLocation","state","backUpYear","backUpSeason","getData","goBack","CSSTransition","in","timeout","classNames","unmountOnExit","onExit","md","episodes","toLowerCase","getSeasonIcon","premiered","split","getYear","strokeWidth","transform","textAnchor","fontSize","dy","x","y","dominantBaseline","synopsis","Image","src","image_url","trailer_url","url","App","customHistory","createBrowserHistory","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2c56d92.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAutumnLeaf(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    enableBackground: \"new 0 0 100 100\",\n    viewBox: \"0 0 100 100\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.6,67.4l1,1.9L23.8,79c-0.4,0.4-0.9,0.6-1.4,0.6s-1-0.2-1.4-0.6c-0.8-0.8-0.8-2,0-2.8l9.8-9.8L32.6,67.4z M81.7,48.2 c-0.1-1.5-1.1-2.8-2.6-3.2l-6.2-2.1c-0.5-0.2-1-0.6-1.2-1.1c-0.2-0.5-0.2-1.1,0-1.6l4.7-11.7c0.6-1.4,0.3-3-0.8-4.1 c-1.1-1.1-2.6-1.4-4.1-0.8l-11.7,4.7c-0.5,0.2-1.1,0.2-1.6,0c-0.5-0.2-0.9-0.7-1-1.2l-2.1-6.2c-0.5-1.5-1.7-2.4-3.2-2.6 c-1.5-0.1-2.9,0.6-3.6,2l-6.9,13c-0.3,0.6-0.8,0.9-1.5,1c-0.6,0.1-1.2-0.1-1.7-0.5l-6.1-6c-0.7-0.7-1.6-1.1-2.6-1.1 c-0.5,0-1,0.1-1.5,0.3c-1.5,0.6-2.3,2-2.3,3.5l0.5,15.8c0,0.9-0.5,1.7-1.3,1.9l-4,1.4c-1.5,0.5-2.4,1.7-2.5,3.3 c-0.1,1.5,0.7,2.9,2,3.6l13.4,6.9l5.8-5.8V47.2c0-1.1,0.9-2,2-2c1.1,0,2,0.9,2,2v6.5l10-10c0.8-0.8,2-0.8,2.8,0c0.8,0.8,0.8,2,0,2.8 l-10,10h6.5c1.1,0,2,0.9,2,2c0,1.1-0.9,2-2,2H42.3l-5.8,5.8l6.9,13.4c0.7,1.4,2.1,2.1,3.6,2c1.5-0.1,2.8-1,3.3-2.5l1.4-4 c0.3-0.8,1.1-1.4,1.9-1.3l15.8,0.5c1.6,0,2.9-0.8,3.5-2.3c0.6-1.5,0.3-3-0.8-4.1l-6-6.1c-0.4-0.5-0.6-1.1-0.5-1.7 c0.1-0.6,0.5-1.2,1-1.5l13-6.9C81.1,51.1,81.8,49.7,81.7,48.2z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAutumnLeaf);\nexport default __webpack_public_path__ + \"static/media/autumn-leaf.63d2371c.svg\";\nexport { ForwardRef as ReactComponent };","import axios from 'axios';\r\n\r\nconst getSeasonalAnime = async (year: number, season: string) => {\r\n    return await axios.get(`https://api.jikan.moe/v3/season/${year}/${season}`);\r\n};\r\n\r\nexport const getRandomSeasonalAnime = async (year: number, season: string) => {\r\n    const data = await getSeasonalAnime(year, season);\r\n    const animeData = data.data;\r\n    const anime = animeData.anime.filter((anime: any) => anime.r18 === false );\r\n    const randomNumber = Math.floor(Math.random() * anime.length);\r\n    return anime[randomNumber];\r\n}\r\n\r\nexport const getAnimeById = async (id: number) => {\r\n    return await axios.get(`https://api.jikan.moe/v3/anime/${id}`);\r\n}\r\n\r\nexport const getAllSeasonsAvailable = async () => {\r\n    return await axios.get(`https://api.jikan.moe/v3/season/archive`);\r\n}","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFlorist(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 0 48 48\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h48v48h-48z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24 44c9.94 0 18-8.06 18-18-9.94 0-18 8.06-18 18zm-12.79-23.5c0 2.76 2.24 5 5 5 1.05 0 2.03-.33 2.83-.88l-.04.38c0 2.76 2.24 5 5 5s5-2.24 5-5l-.04-.38c.81.56 1.78.88 2.83.88 2.76 0 5-2.24 5-5 0-1.99-1.17-3.7-2.86-4.5 1.68-.8 2.86-2.51 2.86-4.5 0-2.76-2.24-5-5-5-1.05 0-2.03.33-2.83.88l.04-.38c0-2.76-2.24-5-5-5s-5 2.24-5 5l.04.38c-.81-.56-1.78-.88-2.83-.88-2.76 0-5 2.24-5 5 0 1.99 1.17 3.7 2.86 4.5-1.69.8-2.86 2.51-2.86 4.5zm12.79-9.5c2.76 0 5 2.24 5 5s-2.24 5-5 5-5-2.24-5-5 2.24-5 5-5zm-18 15c0 9.94 8.06 18 18 18 0-9.94-8.06-18-18-18z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFlorist);\nexport default __webpack_public_path__ + \"static/media/florist.5bbf5ba6.svg\";\nexport { ForwardRef as ReactComponent };","var _circle, _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSun(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    enableBackground: \"new 0 0 32 32\",\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 16,\n    cy: 16,\n    r: 9\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.5 4.13867V2c0-.82813-.67139-1.5-1.5-1.5S14.5 1.17188 14.5 2v2.13867c0 .82813.67139 1.5 1.5 1.5S17.5 4.9668 17.5 4.13867zM8.67383 8.67285c.58545-.58594.58545-1.53613-.00049-2.12109L7.16113 5.04004c-.58594-.58594-1.53564-.58594-2.12158 0C4.4541 5.62598 4.4541 6.57617 5.04004 7.16113l1.51221 1.51172C6.84521 8.96582 7.229 9.1123 7.61279 9.1123S8.38086 8.96582 8.67383 8.67285zM2 17.5h2.13818c.82861 0 1.5-.67188 1.5-1.5s-.67139-1.5-1.5-1.5H2c-.82861 0-1.5.67188-1.5 1.5S1.17139 17.5 2 17.5zM5.03955 26.95996c.29297.29297.67725.43945 1.06104.43945s.76758-.14648 1.06055-.43945l1.51221-1.51172c.58594-.58496.58594-1.53516.00049-2.12109-.58594-.58594-1.53564-.58594-2.12158 0l-1.51221 1.51172C4.4541 25.42383 4.4541 26.37402 5.03955 26.95996zM14.5 27.86133V30c0 .82813.67139 1.5 1.5 1.5s1.5-.67188 1.5-1.5v-2.13867c0-.82813-.67139-1.5-1.5-1.5S14.5 27.0332 14.5 27.86133zM24.83887 26.95996c.29297.29297.67676.43945 1.06055.43945s.76758-.14648 1.06055-.43945c.58594-.58594.58594-1.53516 0-2.12109l-1.51172-1.51172c-.58594-.58594-1.53516-.58594-2.12109 0s-.58594 1.53516 0 2.12109L24.83887 26.95996zM30 14.5h-2.13867c-.82813 0-1.5.67188-1.5 1.5s.67188 1.5 1.5 1.5H30c.82813 0 1.5-.67188 1.5-1.5S30.82813 14.5 30 14.5zM26.95996 5.04004c-.58594-.58594-1.53516-.58594-2.12109 0l-1.51172 1.51172c-.58594.58594-.58594 1.53516 0 2.12109.29297.29297.67676.43945 1.06055.43945s.76758-.14648 1.06055-.43945l1.51172-1.51172C27.5459 6.5752 27.5459 5.62598 26.95996 5.04004z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSun);\nexport default __webpack_public_path__ + \"static/media/sun.5528861f.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgWinterSnowman(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.71,14.29a1,1,0,0,0-1.42,0l-2.22,2.23a7.07,7.07,0,0,0-2.85-2.73,5,5,0,1,0-6.44,0,7.07,7.07,0,0,0-2.85,2.73L7.71,14.29a1,1,0,0,0-1.42,1.42l2.86,2.85A6.9,6.9,0,0,0,9,20a7,7,0,0,0,14,0,6.9,6.9,0,0,0-.15-1.44l2.86-2.85A1,1,0,0,0,25.71,14.29ZM17,22a1,1,0,0,1-2,0V18a1,1,0,0,1,2,0Z\",\n    \"data-name\": \"winter snowman\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgWinterSnowman);\nexport default __webpack_public_path__ + \"static/media/winter-snowman.454f17da.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useState } from 'react';\r\nimport { getRandomSeasonalAnime, getAllSeasonsAvailable } from '../api/jikan';\r\nimport { Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Input } from 'reactstrap'\r\nimport { useHistory } from 'react-router';\r\nimport { ReactComponent as Fall } from '../icons/autumn-leaf.svg';\r\nimport { ReactComponent as Spring } from '../icons/florist.svg';\r\nimport { ReactComponent as Summer } from '../icons/sun.svg';\r\nimport { ReactComponent as Winter } from '../icons/winter-snowman.svg';\r\nimport \"../css/MainPage.css\";\r\n\r\nconst MainPage = () => {\r\n    const [year, setYear] = useState(2021);\r\n    const [season, setSeason] = useState('fall');\r\n\r\n    // getAllSeasonsAvailable\r\n    const [data, setData] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    const getYearData = async () => {\r\n        const data = await getAllSeasonsAvailable();\r\n        const archive = data.data.archive;\r\n        setData(archive);\r\n    }\r\n\r\n    const getYearDropdown = () => {\r\n        const dropdownOptions = data.map((yearData: any, index: number) => {\r\n            return <option key={index} value={yearData.year}>{yearData.year}</option>\r\n        });\r\n        return dropdownOptions;\r\n    }\r\n\r\n    const seasonColor: { [key: string]: string } = {\r\n        spring: 'colorSpring',\r\n        summer: 'colorSummer',\r\n        fall: 'colorFall',\r\n        winter: 'colorWinter',\r\n    };\r\n\r\n    const colorSelected = (seasonIcon: string): string => {\r\n        if(seasonIcon === season) {\r\n            return seasonColor[season];\r\n        } else {\r\n            return 'normal'\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        const data: any = await getRandomSeasonalAnime(year, season);\r\n        console.log(data);\r\n\r\n        if(data === undefined) {\r\n            alert(\"No anime found\");\r\n        } else {\r\n            history.push('/anime', { \r\n                id: data.mal_id,\r\n                year: year,\r\n                season: season\r\n            });\r\n        }\r\n    \r\n    }\r\n\r\n    useEffect(() => {\r\n        getYearData();\r\n    }, []);\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"title\">\r\n                <h1>Random Anime Picker</h1>\r\n            </Row>\r\n            <Row>\r\n                <Col sm={6}>\r\n                    <Row className=\"seasons\">\r\n                        <h2>Seasons: </h2>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Winter \r\n                                className={colorSelected('winter')}\r\n                                width='100%' \r\n                                height='100%'\r\n                                onClick={() => setSeason('winter')}\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <Spring  \r\n                                className={colorSelected('spring')}\r\n                                width='80%' \r\n                                height='100%' \r\n                                onClick={() => setSeason('spring')}\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <Summer\r\n                                className={colorSelected('summer')}\r\n                                width='80%' \r\n                                height='100%'\r\n                                onClick={() => setSeason('summer')}\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <Fall \r\n                                className={colorSelected('fall')}\r\n                                width='100%' \r\n                                height='100%'\r\n                                onClick={() => setSeason('fall')}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col sm={6}>\r\n                    <Row className=\"year\">\r\n                        <h2>Year: </h2>\r\n                    </Row>\r\n                    <Row className=\"year_selector\">\r\n                        <Input \r\n                            type=\"select\"\r\n                            onChange={(event) => {\r\n                                setYear(Number(event.target.value))\r\n                            }}\r\n                        >\r\n                            {getYearDropdown()}\r\n                        </Input>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"button_container\">\r\n                    <Button\r\n                        variant=\"dark\"\r\n                        size=\"lg\"\r\n                        onClick={() => {\r\n                            handleSubmit();\r\n                        }}\r\n                    >\r\n                        Get Random Anime\r\n                    </Button>\r\n                </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default MainPage;","import \"../css/Loading.css\";\r\nimport { Container } from 'react-bootstrap';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <Container className='loading'>\r\n            <svg className=\"circular-loader\"viewBox=\"25 25 50 50\" >\r\n                <circle className=\"loading-circle\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke=\"#70c542\" stroke-width=\"2\" />\r\n            </svg>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Loading;","import { useEffect, useState } from 'react';\r\nimport { getAnimeById } from '../api/jikan';\r\nimport { useHistory, useLocation} from 'react-router';\r\nimport { Row, Col, Container, Image, Button } from 'react-bootstrap';\r\nimport '../css/AnimePage.css';\r\nimport { ReactComponent as Fall } from '../icons/autumn-leaf.svg';\r\nimport { ReactComponent as Spring } from '../icons/florist.svg';\r\nimport { ReactComponent as Summer } from '../icons/sun.svg';\r\nimport { ReactComponent as Winter } from '../icons/winter-snowman.svg';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport Loading from './Loading';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport ReactPlayer from 'react-player/youtube'\r\n\r\ninterface LocationState {\r\n    id: number,\r\n    year: number,\r\n    season: string\r\n}\r\n\r\ninterface ScoreCircleProps {\r\n    score: number\r\n}\r\n\r\nconst ratingAnimation = (rating: number) => keyframes`\r\n    to {\r\n        stroke-dashoffset: ${rating};\r\n    }\r\n`;\r\n\r\nconst ScoreCircle = styled.circle<ScoreCircleProps>`\r\n    stroke-dasharray: 251;\r\n    stroke-dashoffset: 251;\r\n    animation: ${props => ratingAnimation(props.score)} 0.5s linear forwards;\r\n`;\r\n\r\nconst AnimePage = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [ready, setReady] = useState(false);\r\n    const [data, setData] = useState<any>({});\r\n\r\n    const history = useHistory();\r\n    const locationData = useLocation<LocationState>();\r\n    const id = locationData.state?.id ?? 40748;\r\n    const backUpYear = locationData.state?.year ?? 2020;\r\n    const backUpSeason = locationData.state?.season ?? 'fall';\r\n\r\n    const getPercentForCircle = (rating: number) => {\r\n        console.log(251 - (251 * (rating / 10)));\r\n        if(rating === 0) {\r\n            return 0;\r\n        }\r\n        return 251 - (251 * (rating / 10));\r\n    }\r\n\r\n    const goBack = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const getSeason = (premiere: string) => {\r\n        return premiere.split(' ')[0];\r\n    }\r\n\r\n    const getSeasonIcon = (season: string) => {\r\n        switch(season.toLowerCase()) {\r\n            case 'spring':\r\n                return <Spring width={50} height={50} fill=\"#35713B\"/>\r\n            case 'summer':\r\n                return <Summer width={50} height={50} fill=\"#A89220\"/>\r\n            case 'fall':\r\n                return <Fall width={50} height={50} fill=\"#A04F35\"/>\r\n            case 'winter':\r\n                return <Winter width={50} height={50} fill=\"#5798AD\"/>\r\n            default:\r\n                return <h1>N/A</h1>\r\n        }\r\n    }\r\n\r\n    const getYear = (premiere: string) => {\r\n        return premiere.split(' ')[1];\r\n    }\r\n\r\n    const getData = async () => {\r\n        console.log(id);\r\n        const data = await getAnimeById(id);\r\n        console.log(data);\r\n        setData(data.data);\r\n        setLoading(false);\r\n        return data;\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className='anime-page'>\r\n            <Container className='back-button-container'>\r\n                <Button\r\n                    variant=\"dark\"\r\n                    onClick={() => goBack()}\r\n                >\r\n                    {'< Back'}\r\n                </Button>\r\n            </Container>\r\n            <CSSTransition\r\n                in={loading}\r\n                timeout={1000}\r\n                classNames=\"loading\"\r\n                unmountOnExit\r\n                onExit={() => setReady(true)}\r\n            >\r\n                <Loading/>\r\n            </CSSTransition>\r\n            <CSSTransition\r\n                in={ready}\r\n                timeout={1000}\r\n                classNames=\"data\"\r\n            >\r\n                <Container className=\"data\">\r\n                    {ready && \r\n                    <>\r\n                    <Row >\r\n                        <Col md={8}>\r\n                            <Row>\r\n                                <h1>\r\n                                    {data.title}\r\n                                </h1>\r\n                            </Row>\r\n                            <Row className=\"stats\">\r\n                                <Col >\r\n                                    <Row className=\"episodes\">\r\n                                        <h4>\r\n                                            Episodes:\r\n                                        </h4>\r\n                                    </Row>\r\n                                    <Row className=\"episodes\">\r\n                                        <h1>\r\n                                            {data.episodes ?? 'N/A'}\r\n                                        </h1>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Row className=\"seasons\">\r\n                                        <h4>\r\n                                            Seasons:\r\n                                        </h4>\r\n                                    </Row>\r\n                                    <Row className=\"seasons\">\r\n                                        <h1>\r\n                                            {getSeasonIcon(data.premiered ? getSeason(data.premiered) : backUpSeason)}\r\n                                        </h1>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Row className=\"year\">\r\n                                        <h4>\r\n                                            Year: \r\n                                        </h4>\r\n                                    </Row>\r\n                                    <Row className=\"year\">\r\n                                        <h1>\r\n                                            {data.premiered ? getYear(data.premiered) : backUpYear}\r\n                                        </h1>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Row className=\"score\">\r\n                                        <svg\r\n                                            height=\"100px\"\r\n                                            width=\"100px\"\r\n                                        >\r\n                                            <ScoreCircle\r\n                                                score={getPercentForCircle(data.score ? data.score : 0)}\r\n                                                className=\"circle\"\r\n                                                stroke=\"white\"\r\n                                                strokeWidth=\"7\"\r\n                                                fill=\"transparent\"\r\n                                                transform=\"rotate(-90 50 50)\"\r\n                                                r=\"40\"\r\n                                                cx=\"50\"\r\n                                                cy=\"50\"\r\n                                            />\r\n                                            <text\r\n                                                stroke=\"white\"\r\n                                                fill=\"white\"\r\n                                                textAnchor=\"middle\"\r\n                                                fontSize=\"30px\"\r\n                                                dy=\"0.05em\"\r\n                                                x=\"50%\" \r\n                                                y=\"50%\" \r\n                                                dominantBaseline=\"middle\"\r\n                                            >\r\n                                                {data.score ? data.score : \"???\"}\r\n                                            </text>\r\n                                        </svg>\r\n                                    </Row> \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"synopsis-title\">\r\n                                Synopsis:\r\n                            </Row>\r\n                            <Row className=\"synopsis\">\r\n                                {data.synopsis}\r\n                            </Row>\r\n                        </Col>\r\n                        <Col md={4} className=\"image-container\">\r\n                            <Image className=\"image\"\r\n                                src={data.image_url}\r\n                            />\r\n                        </Col>\r\n                    </Row> \r\n                    <Row className=\"trailer\">\r\n                        {data.trailer_url && \r\n                            <ReactPlayer \r\n                                url={data.trailer_url}\r\n                                width='100%'\r\n                            /> }\r\n                    </Row>\r\n                    </>\r\n                    }\r\n                </Container>\r\n            </CSSTransition>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AnimePage;","import { Router, Switch, Route} from 'react-router';\nimport { createBrowserHistory } from 'history';\nimport Main from './components/MainPage';\nimport Anime from './components/AnimePage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/App.css';\n\nfunction App() {\n    const customHistory = createBrowserHistory();\n\n    return (\n        <Router history={customHistory}>\n            <Switch>\n                <Route exact path=\"/\">\n                    <Main/>\n                </Route>\n                <Route path=\"/anime\">\n                    <Anime/>\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}